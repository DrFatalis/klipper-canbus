##
## Get Klipper Source and Build venv
## Inspired from mkuf
##
FROM python:3.12-bookworm as build

RUN apt update \
 && apt install -y cmake python3-can  \
 && apt clean

WORKDIR /opt
#COPY requirements.txt .

# Getting Klipper from Repo
RUN python -m venv venv \
 && venv/bin/pip install pyserial setuptools python-can

ARG KLIPPER_REPO=https://github.com/Klipper3d/klipper
ARG KLIPPER_VERSION=master

RUN git clone ${KLIPPER_REPO} klipper \
 && cd klipper \
 && git checkout ${KLIPPER_VERSION} \
 && rm -rf .git

RUN venv/bin/pip install -r klipper/scripts/klippy-requirements.txt \
 && venv/bin/python -m compileall klipper/klippy \
 && venv/bin/python klipper/klippy/chelper/__init__.py

# Getting katapult from Repo
ARG KATAPULT_REPO=https://github.com/Arksine/katapult
ARG KATAPULT_VERSION=master

RUN git clone ${KATAPULT_REPO} katapult \
 && cd katapult \
 && git checkout ${KATAPULT_VERSION} \
 && rm -rf .git

###
## Klippy Runtime Image
##
FROM python:3.12-slim-bookworm as run

ENV ADD_KATAPULT=false

RUN apt update \
    && apt install -y make gcc gcc-arm-none-eabi dfu-util python3 python3-pip python3-can usbutils gcc-avr iproute2 net-tools  \
    && apt clean ; fi

WORKDIR /opt
RUN groupadd klipper --gid 1000 \
 && useradd klipper --uid 1000 --gid klipper \
 && usermod klipper --append --groups dialout \
 && usermod klipper --append --groups tty
RUN mkdir -p printer_data/run printer_data/gcodes printer_data/logs printer_data/config \
 && chown -R klipper:klipper /opt/*

COPY --chown=klipper:klipper --from=build /opt/klipper ./klipper
COPY --chown=klipper:klipper --from=build /opt/venv ./venv
COPY --chown=klipper:klipper --from=build /opt/katapult ./katapult

USER klipper
VOLUME ["/opt/printer_data/run", "/opt/printer_data/gcodes", "/opt/printer_data/logs", "/opt/printer_data/config"]
ENTRYPOINT ["/opt/venv/bin/python", "klipper/klippy/klippy.py"]
CMD ["-I", "printer_data/run/klipper.tty", "-a", "printer_data/run/klipper.sock", "printer_data/config/printer.cfg"]


##
## Image for building MCU code including other tooling
##
FROM debian:bookworm as tools

WORKDIR /opt
ARG DEBIAN_FRONTEND=noninteractive
RUN apt update \
 && apt install -y \
      sudo \
      virtualenv python3-dev libffi-dev build-essential pkg-config\
      libncurses-dev \
      avrdude gcc-avr binutils-avr avr-libc \
      stm32flash dfu-util libnewlib-arm-none-eabi \
      gcc-arm-none-eabi binutils-arm-none-eabi libusb-1.0-0 libusb-1.0-0-dev \
      python3-numpy python3-matplotlib \
 && apt clean

COPY --from=build /opt/klipper ./klipper
COPY --from=build /opt/venv ./venv

###
## Build the klipper_mcu binary
##
FROM tools as build-hostmcu

WORKDIR /opt

COPY config.hostmcu klipper/.config
RUN cd klipper \
 && make flash

###
## Runtime image for the klipper_mcu binary
##
FROM debian:bookworm-slim as hostmcu

RUN apt update \
 && apt install -y gpiod \
 && apt clean

COPY --from=build-hostmcu /usr/local/bin/klipper_mcu /usr/local/bin/klipper_mcu

VOLUME ["/opt/printer_data/run"]
ENTRYPOINT ["/usr/local/bin/klipper_mcu"]
CMD ["-I", "/opt/printer_data/run/klipper_host_mcu.tty"]

